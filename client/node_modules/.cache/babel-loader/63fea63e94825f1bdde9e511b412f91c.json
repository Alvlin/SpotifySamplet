{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\Spotify\\\\SampleSpotify\\\\client\\\\src\\\\components\\\\AlbumCard.js\";\nimport React, { Component } from 'react';\nimport AlbumTrackCard from './AlbumTrackCard';\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\n\nclass AlbumCard extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => {\n      this.setState({\n        isPaneOpen: true\n      }); // console.log('ALBUM TRACKS')\n\n      const id = this.props.data.id;\n      const baseUrl = 'https://api.spotify.com/v1/albums/';\n      const auth_token = 'Bearer BQAgwO3otjQSlBdYXOGf_zQBSmdbDKqslz8dXuq-4ULN7hbR3PeHoZfCS3uatvoZTtExBJ8bL9shYZH-wa9EcqD1SdtLWoi9NpdQCSXfggbn9FZ8NT9ZQthu1f3ssxNjtcr0oq00YI4PwKNLeyf7qmgtAE7rlkB8_0JHCXdrmt8uUwk&refresh_token=AQCuC04iwsKw3eyyqU9Hm4A_clp1S_ebPWUZViRPZ7OwDoBhhEget0CnakjDl6GyXKDl267RQL8l-wlTbGHnoKKsnvEA5pa3Ekgzxu9RTyMSMcw-vYNFbeTIja9JDu_I00s';\n      let fetchUrl = baseUrl + id + '/tracks?limit=20'; // let albumTracks;\n\n      fetch(fetchUrl, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': auth_token\n        }\n      }).then(resp => resp.json()).then(data => console.log(data.items));\n    };\n\n    this.state = {\n      isPaneOpen: false,\n      isPaneOpenLeft: false\n    };\n  }\n\n  render() {\n    console.log(this.state.isPaneOpenLeft);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"track-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleClick,\n      src: this.props.data.images[1].url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \" \", this.props.data.name), \"// \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        isPaneOpenLeft: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }, \" Listen to Album\")), /*#__PURE__*/React.createElement(SlidingPane, {\n      closeIcon: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 26\n        }\n      }, \"Some div containing custom close icon.\"),\n      isOpen: this.state.isPaneOpenLeft,\n      title: \"Hey, it is optional pane title.  I can be React component too.\",\n      from: \"left\",\n      width: \"200px\",\n      onRequestClose: () => this.setState({\n        isPaneOpenLeft: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, \" STUFF \"))));\n  }\n\n}\n\nexport default AlbumCard;","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/Spotify/SampleSpotify/client/src/components/AlbumCard.js"],"names":["React","Component","AlbumTrackCard","SlidingPane","AlbumCard","constructor","handleClick","setState","isPaneOpen","id","props","data","baseUrl","auth_token","fetchUrl","fetch","method","headers","then","resp","json","console","log","items","state","isPaneOpenLeft","render","images","url","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,gDAAP;;AAGA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,WAAW,GAAE;AACT;;AADS,SAQbC,WARa,GAQC,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd,EADgB,CAEhB;;AACA,YAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,EAA3B;AACA,YAAMG,OAAO,GAAG,oCAAhB;AACA,YAAMC,UAAU,GAAG,0UAAnB;AACA,UAAIC,QAAQ,GAAGF,OAAO,GAAGH,EAAV,GAAe,kBAA9B,CANgB,CAOhB;;AACAM,MAAAA,KAAK,CAACD,QAAD,EAAW;AACZE,QAAAA,MAAM,EAAE,KADI;AAEZC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiBJ;AAFZ;AAFG,OAAX,CAAL,CAOCK,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQMP,IAAI,IAAIU,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACY,KAAjB,CARd;AASH,KAzBY;;AAET,SAAKC,KAAL,GAAa;AACThB,MAAAA,UAAU,EAAE,KADH;AAETiB,MAAAA,cAAc,EAAE;AAFP,KAAb;AAIH;;AAsBDC,EAAAA,MAAM,GAAE;AACJL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWC,cAAvB;AACA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,OAAO,EAAE,KAAKnB,WAAnB;AAAgC,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWC,IAAX,CAAgBgB,MAAhB,CAAuB,CAAvB,EAA0BC,GAA/D;AAAoE,MAAA,GAAG,EAAC,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKlB,KAAL,CAAWC,IAAX,CAAgBkB,IAArB,CAFA,sBAGG;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKtB,QAAL,CAAc;AAAEkB,QAAAA,cAAc,EAAE;AAAlB,OAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHH,CADJ,eAMI,oBAAC,WAAD;AACE,MAAA,SAAS,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADb;AAEE,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,cAFrB;AAGE,MAAA,KAAK,EAAC,gEAHR;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAC,OALR;AAME,MAAA,cAAc,EAAE,MAAM,KAAKlB,QAAL,CAAc;AAAEkB,QAAAA,cAAc,EAAE;AAAlB,OAAd,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,CARE,CANJ,CADA;AAoBH;;AAnD6B;;AAsDlC,eAAerB,SAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport AlbumTrackCard from './AlbumTrackCard'\r\nimport SlidingPane from \"react-sliding-pane\";\r\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\r\n\r\n\r\nclass AlbumCard extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            isPaneOpen: false,\r\n            isPaneOpenLeft: false\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({ isPaneOpen: true  })\r\n        // console.log('ALBUM TRACKS')\r\n        const id = this.props.data.id\r\n        const baseUrl = 'https://api.spotify.com/v1/albums/'\r\n        const auth_token = 'Bearer BQAgwO3otjQSlBdYXOGf_zQBSmdbDKqslz8dXuq-4ULN7hbR3PeHoZfCS3uatvoZTtExBJ8bL9shYZH-wa9EcqD1SdtLWoi9NpdQCSXfggbn9FZ8NT9ZQthu1f3ssxNjtcr0oq00YI4PwKNLeyf7qmgtAE7rlkB8_0JHCXdrmt8uUwk&refresh_token=AQCuC04iwsKw3eyyqU9Hm4A_clp1S_ebPWUZViRPZ7OwDoBhhEget0CnakjDl6GyXKDl267RQL8l-wlTbGHnoKKsnvEA5pa3Ekgzxu9RTyMSMcw-vYNFbeTIja9JDu_I00s'\r\n        let fetchUrl = baseUrl + id + '/tracks?limit=20'\r\n        // let albumTracks;\r\n        fetch(fetchUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': auth_token\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(data => console.log(data.items))\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(this.state.isPaneOpenLeft)\r\n        return(\r\n        <div>\r\n            <div className=\"track-card\" >\r\n            <img onClick={this.handleClick} src={this.props.data.images[1].url} alt=''  />\r\n            <p> {this.props.data.name}</p>\r\n            // <button onClick={() => this.setState({ isPaneOpenLeft: true})} > Listen to Album</button>\r\n            </div>\r\n            <SlidingPane\r\n              closeIcon={<div>Some div containing custom close icon.</div>}\r\n              isOpen={this.state.isPaneOpenLeft}\r\n              title=\"Hey, it is optional pane title.  I can be React component too.\"\r\n              from=\"left\"\r\n              width=\"200px\"\r\n              onRequestClose={() => this.setState({ isPaneOpenLeft: false })}\r\n            >\r\n          <div><p> STUFF </p></div>\r\n        </SlidingPane>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlbumCard;\r\n"]},"metadata":{},"sourceType":"module"}