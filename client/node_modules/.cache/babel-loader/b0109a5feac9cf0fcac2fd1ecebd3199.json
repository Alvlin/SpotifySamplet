{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\Spotify\\\\SampleSpotify\\\\client\\\\src\\\\components\\\\AlbumCard.js\";\nimport React, { Component } from 'react';\nimport AlbumTrackCard from './AlbumTrackCard';\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport { apiTok } from './../App.js';\nimport ReactDOM from 'react-dom';\nimport TrackList from './TrackList';\nimport \"../css/albumcard.css\";\nlet albumImg;\n\nclass AlbumCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        isPaneOpenLeft: true\n      }); // console.log('ALBUM TRACKS')\n\n      const id = this.props.data.id;\n      const baseUrl = 'https://api.spotify.com/v1/albums/';\n      const auth_token = 'Bearer ' + apiTok;\n      let fetchUrl = baseUrl + id + '/tracks?limit=24'; // let albumTracks;\n\n      fetch(fetchUrl, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': auth_token\n        }\n      }).then(resp => resp.json()).then(function (data) {\n        console.log('asdsadsa', data);\n        this.state.tracklisted = data.items.map(val => /*#__PURE__*/React.createElement(TrackList, {\n          key: val.id,\n          data: val,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }));\n      });\n    };\n\n    this.state = {\n      isPaneOpen: false,\n      isPaneOpenLeft: false,\n      tracklisted: null\n    };\n    this.handleClick();\n  }\n\n  render() {\n    albumImg = this.props.data.images[1].url;\n    console.log(this.state.isPaneOpenLeft);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"track-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleClick,\n      src: this.props.data.images[1].url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \" \", this.props.data.name)), /*#__PURE__*/React.createElement(SlidingPane, {\n      isOpen: this.state.isPaneOpenLeft,\n      from: \"left\",\n      width: \"400px\",\n      onRequestClose: () => this.setState({\n        isPaneOpenLeft: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"album-tracks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, this.state.tracklisted)));\n  }\n\n}\n\nexport default AlbumCard;\nexport { albumImg };","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/Spotify/SampleSpotify/client/src/components/AlbumCard.js"],"names":["React","Component","AlbumTrackCard","SlidingPane","apiTok","ReactDOM","TrackList","albumImg","AlbumCard","constructor","props","handleClick","setState","isPaneOpenLeft","id","data","baseUrl","auth_token","fetchUrl","fetch","method","headers","then","resp","json","console","log","state","tracklisted","items","map","val","isPaneOpen","render","images","url","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AlbumTrackCard from './AlbumTrackCard'\r\nimport SlidingPane from \"react-sliding-pane\";\r\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\r\nimport {apiTok} from './../App.js'\r\nimport ReactDOM from 'react-dom'\r\nimport TrackList from './TrackList'\r\nimport \"../css/albumcard.css\";\r\n\r\nlet albumImg;\r\nclass AlbumCard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isPaneOpen: false,\r\n            isPaneOpenLeft: false,\r\n            tracklisted: null\r\n        }\r\n        this.handleClick()\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({ isPaneOpenLeft: true })\r\n        // console.log('ALBUM TRACKS')\r\n        const id = this.props.data.id\r\n        const baseUrl = 'https://api.spotify.com/v1/albums/'\r\n        const auth_token = 'Bearer ' + apiTok\r\n        let fetchUrl = baseUrl + id + '/tracks?limit=24'\r\n        // let albumTracks;\r\n        fetch(fetchUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': auth_token\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(function(data){\r\n          console.log('asdsadsa',data);\r\n\r\n          this.state.tracklisted = data.items.map((val) =>\r\n              <TrackList  key={val.id}  data={val}/>)\r\n\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n      albumImg = this.props.data.images[1].url;\r\n        console.log(this.state.isPaneOpenLeft)\r\n        return(\r\n        <div>\r\n            <div className=\"track-card\" >\r\n            <img onClick={this.handleClick} src={this.props.data.images[1].url} alt=''  />\r\n            <p> {this.props.data.name}</p>\r\n            </div>\r\n            <SlidingPane\r\n              isOpen={this.state.isPaneOpenLeft}\r\n              from=\"left\"\r\n              width=\"400px\"\r\n              onRequestClose={() => this.setState({ isPaneOpenLeft: false })}\r\n            >\r\n              <div id=\"album-tracks\">{this.state.tracklisted}</div>\r\n            </SlidingPane>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlbumCard;\r\nexport {albumImg};\r\n"]},"metadata":{},"sourceType":"module"}