{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\Spotify\\\\SampleSpotify\\\\client\\\\src\\\\components\\\\AlbumCard.js\";\nimport React, { Component } from 'react';\nimport AlbumTrackCard from './AlbumTrackCard';\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport { apiTok } from './../App.js';\nimport ReactDOM from 'react-dom';\nimport TrackList from './TrackList';\nimport \"../css/albumcard.css\";\nlet albumImg;\nvar options;\n\nclass AlbumCard extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => {\n      console.log(apiTok);\n      this.setState({\n        isPaneOpenLeft: true\n      }); // console.log('ALBUM TRACKS')\n\n      const id = this.props.data.id;\n      const baseUrl = 'https://api.spotify.com/v1/albums/';\n      const auth_token = 'Bearer ' + apiTok;\n      let fetchUrl = baseUrl + id + '/tracks?limit=24';\n      fetch(fetchUrl, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': auth_token\n        }\n      }).then(resp => resp.json()).then(data => options = data);\n      console.log('39', options);\n    };\n\n    this.state = {\n      isPaneOpen: false,\n      isPaneOpenLeft: false\n    };\n  }\n\n  render() {\n    albumImg = this.props.data.images[1].url; // option = this.handleClick();\n\n    console.log('49', options);\n    console.log(this.state.isPaneOpenLeft);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"track-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleClick,\n      src: this.props.data.images[1].url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \" \", this.props.data.name)), /*#__PURE__*/React.createElement(SlidingPane, {\n      isOpen: this.state.isPaneOpenLeft,\n      from: \"left\",\n      width: \"400px\",\n      onRequestClose: () => this.setState({\n        isPaneOpenLeft: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, options.map(val => /*#__PURE__*/React.createElement(TrackList, {\n      key: val.id,\n      data: val,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"album-tracks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }\n    }, \" STUFF \"))));\n  }\n\n}\n\nexport default AlbumCard;\nexport { albumImg };","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/Spotify/SampleSpotify/client/src/components/AlbumCard.js"],"names":["React","Component","AlbumTrackCard","SlidingPane","apiTok","ReactDOM","TrackList","albumImg","options","AlbumCard","constructor","handleClick","console","log","setState","isPaneOpenLeft","id","props","data","baseUrl","auth_token","fetchUrl","fetch","method","headers","then","resp","json","state","isPaneOpen","render","images","url","name","map","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AlbumTrackCard from './AlbumTrackCard'\r\nimport SlidingPane from \"react-sliding-pane\";\r\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\r\nimport {apiTok} from './../App.js'\r\nimport ReactDOM from 'react-dom'\r\nimport TrackList from './TrackList'\r\nimport \"../css/albumcard.css\";\r\n\r\nlet albumImg;\r\nvar options;\r\nclass AlbumCard extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            isPaneOpen: false,\r\n            isPaneOpenLeft: false\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        console.log(apiTok);\r\n        this.setState({ isPaneOpenLeft: true })\r\n        // console.log('ALBUM TRACKS')\r\n        const id = this.props.data.id\r\n        const baseUrl = 'https://api.spotify.com/v1/albums/'\r\n        const auth_token = 'Bearer ' + apiTok\r\n        let fetchUrl = baseUrl + id + '/tracks?limit=24'\r\n\r\n        fetch(fetchUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': auth_token\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(data => options = data)\r\n\r\n        console.log('39',options);\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n      albumImg = this.props.data.images[1].url;\r\n      // option = this.handleClick();\r\n      console.log('49',options);\r\n      console.log(this.state.isPaneOpenLeft)\r\n        return(\r\n        <div>\r\n            <div className=\"track-card\" >\r\n            <img onClick={this.handleClick} src={this.props.data.images[1].url} alt=''  />\r\n            <p> {this.props.data.name}</p>\r\n            </div>\r\n            <SlidingPane\r\n              isOpen={this.state.isPaneOpenLeft}\r\n              from=\"left\"\r\n              width=\"400px\"\r\n              onRequestClose={() => this.setState({ isPaneOpenLeft: false })}\r\n            >\r\n            <ul>\r\n              {options.map((val) => <TrackList  key={val.id}  data={val}/>)}\r\n            </ul>\r\n              <div id=\"album-tracks\"><p> STUFF </p></div>\r\n            </SlidingPane>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlbumCard;\r\nexport {albumImg};\r\n"]},"metadata":{},"sourceType":"module"}