{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\spotifyTest\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // import TracksContainer from './components/TracksContainer'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: [],\n      search: '',\n      artist: null,\n      searchType: 'album'\n    };\n\n    this.getHashParams = () => {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n\n      while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n      }\n\n      console.log(hashParams);\n      return hashParams;\n    };\n\n    this.changeType = e => {\n      this.setState({\n        searchType: e.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      const baseUrl = 'https://api.spotify.com/v1/search?';\n      let fetchUrl = baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType; // const albumUrl = 'https://api.spotify.com/v1/artists/';\n      // const baseUrl = 'https://api.spotify.com/v1/albums/'\n      // const fetchUrl = baseUrl + this.state.search + '/tracks'\n\n      const auth_token = 'Bearer BQDVK9vf1ot-gFOeo6miJoqe1rGMRGvNjyaikBBQvZ47QMvu99F_O3n55_4nRSNzdluBf-FmUR35GjNJpP8XBkxnf_YTfMofoP3gbSEJR81Dv1A_7F5UYdJWoYDzXEeMCxuiA_ERjPF6Lc6zRQ9zTp65Tf4sm5f22P4sTXEd2v2rTy4';\n      fetch(fetchUrl, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': auth_token\n        }\n      }).then(resp => resp.json()).then(data => console.log(data)).then(items => this.setState({\n        tracks: items\n      }));\n    };\n\n    this.state = {\n      apiResponse: \"\",\n      tracks: [],\n      search: '',\n      artist: null,\n      searchType: 'album'\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, this.state.apiResponse), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => {\n        this.setState({\n          search: event.target.value\n        });\n      },\n      value: this.state.search,\n      type: \"text\",\n      placeholder: \"Search...\",\n      name: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 62\n      }\n    }), \"Search\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Choose a Genre:\"), /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.state.searchType,\n      onChange: this.changeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"album\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Album\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Artist\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Track\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"album,artist,track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"All\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/spotifyTest/client/src/App.js"],"names":["React","Component","App","constructor","props","state","tracks","search","artist","searchType","getHashParams","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","console","log","changeType","setState","target","value","handleClick","event","preventDefault","baseUrl","fetchUrl","auth_token","fetch","method","headers","then","resp","json","data","items","apiResponse","callAPI","res","text","componentWillMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// import TracksContainer from './components/TracksContainer'\n\n\n\nclass App extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = { apiResponse: \"\",tracks: [],\n      search: '',\n      artist: null,\n      searchType: 'album',};\n    }\n\n    callAPI() {\n      fetch(\"http://localhost:9000/testAPI\")\n          .then(res => res.text())\n          .then(res => this.setState({ apiResponse: res }));\n    }\n\n    componentWillMount() {\n      this.callAPI();\n    }\n    state = {\n      tracks: [],\n      search: '',\n      artist: null,\n      searchType: 'album',\n    }\n\n    getHashParams = () => {\n      var hashParams = {};\n      var e, r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      while ( e = r.exec(q)) {\n         hashParams[e[1]] = decodeURIComponent(e[2]);\n      }\n      console.log(hashParams);\n      return hashParams;\n    }\n\n\n    changeType = (e) => {\n      this.setState({searchType:e.target.value})\n    };\n\n\n    handleClick = (event) => {\n      event.preventDefault()\n      const baseUrl = 'https://api.spotify.com/v1/search?'\n      let fetchUrl = baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType\n      // const albumUrl = 'https://api.spotify.com/v1/artists/';\n      // const baseUrl = 'https://api.spotify.com/v1/albums/'\n      // const fetchUrl = baseUrl + this.state.search + '/tracks'\n      const auth_token = 'Bearer BQDVK9vf1ot-gFOeo6miJoqe1rGMRGvNjyaikBBQvZ47QMvu99F_O3n55_4nRSNzdluBf-FmUR35GjNJpP8XBkxnf_YTfMofoP3gbSEJR81Dv1A_7F5UYdJWoYDzXEeMCxuiA_ERjPF6Lc6zRQ9zTp65Tf4sm5f22P4sTXEd2v2rTy4'\n\n\n      fetch( fetchUrl, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': auth_token\n        },\n      })\n      .then(resp => resp.json())\n       .then(data => console.log(data))\n      .then(items => this.setState({\n        tracks: items\n      }))\n\n     }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App-intro\">{this.state.apiResponse}</p>\n        <form>\n          <input onChange={event => {this.setState({search: event.target.value})}} value={this.state.search} type=\"text\" placeholder=\"Search...\" name=\"search\"/>\n          <button type=\"submit\" onClick={this.handleClick} > <i className=\"fa fa-search\"></i>Search</button>\n          </form>\n          <label>Choose a Genre:</label>\n\n          <select defaultValue={this.state.searchType} onChange={this.changeType}>\n            <option value=\"album\">Album</option>\n            <option value=\"artist\">Artist</option>\n            <option value=\"track\">Track</option>\n            <option value=\"album,artist,track\">All</option>\n          </select>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}