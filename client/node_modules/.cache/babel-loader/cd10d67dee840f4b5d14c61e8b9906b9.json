{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\Spotify\\\\SampleSpotify\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TracksContainer from './components/TracksContainer';\nimport ReactDOM from 'react-dom';\nimport TrackCard from './components/TrackCard';\nimport AlbumCard from './components/AlbumCard';\nimport ArtistCard from './components/ArtistCard';\nvar apiTok;\nconst lookup = {\n  \"album\": [{\n    id: '1',\n    text: 'Sort Alphabetically'\n  }, {\n    id: '2',\n    text: 'Sort by Release Date'\n  }, {\n    id: '3',\n    text: 'Sort by Tracks'\n  }],\n  \"track\": [{\n    id: '1',\n    text: 'Sort Alphabetically'\n  }, {\n    id: '2',\n    text: 'Sort by Popularity'\n  }, {\n    id: '3',\n    text: 'Sort by Release Date'\n  }, {\n    id: '4',\n    text: 'Sort by Song Length(Short to Long)'\n  }],\n  \"artist\": [{\n    id: '1',\n    text: 'Sort Alphabetically'\n  }, {\n    id: '2',\n    text: 'Sort by Popularity'\n  }, {\n    id: '3',\n    text: 'Sort by Followers'\n  }]\n};\n\nclass App extends Component {\n  callAPI() {\n    fetch(\"http://localhost:9000/getToken\").then(res => res.text()).then(res => {\n      this.state.svrResponse = res;\n    });\n    apiTok = this.state.svrResponse;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.changeType = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        searchType: value\n      });\n      this.setState({\n        sortType: 'Sort Alphabetically'\n      });\n    };\n\n    this.changeSortType = e => {\n      this.setState({\n        sortType: e.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      this.callAPI();\n      const baseUrl = 'https://api.spotify.com/v1/search?';\n      const auth_token = 'Bearer ' + this.state.svrResponse;\n      let fetchUrl, cards;\n      let sortType = this.state.sortType;\n      let searching = this.state.searchType;\n\n      if (this.state.search) {\n        fetchUrl = baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType + '&offset=0&limit=24';\n        fetch(fetchUrl, {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': auth_token\n          }\n        }).then(resp => resp.json()).then(function (data) {\n          switch (searching) {\n            case 'album':\n              const j = data.albums.items;\n\n              if (sortType === 'Sort by Release Date') {\n                j.sort((a, b) => new Date(b.release_date).getTime() - new Date(a.release_date).getTime());\n              } else if (sortType === 'Sort Alphabetically') {\n                j.sort((a, b) => a.name.localeCompare(b.name));\n              } else if (sortType === 'Sort by Tracks') {\n                j.sort((a, b) => b.total_tracks - a.total_tracks);\n              } else if (sortType === 'Sort by Song Length(Short to Long)') {\n                j.sort((a, b) => a.duration_ms - b.duration_ms);\n              }\n\n              cards = data.albums.items.map(val => /*#__PURE__*/React.createElement(AlbumCard, {\n                key: val.id,\n                data: val,\n                img: val,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 50\n                }\n              }));\n              ReactDOM.render(cards, document.getElementById('container'));\n              break;\n\n            case 'artist':\n              const i = data.artists.items;\n\n              if (sortType === 'Sort by Followers') {\n                i.sort((a, b) => b.followers.total - a.followers.total);\n              } else if (sortType === 'Sort Alphabetically') {\n                i.sort((a, b) => a.name.localeCompare(b.name));\n              } else if (sortType === 'Sort by Popularity') {\n                i.sort((a, b) => b.popularity - a.popularity);\n              }\n\n              cards = data.artists.items.map(val => /*#__PURE__*/React.createElement(ArtistCard, {\n                key: val.id,\n                data: val,\n                img: val,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 51\n                }\n              }));\n              ReactDOM.render(cards, document.getElementById('container'));\n              break;\n\n            case 'track':\n              let y = data.tracks.items;\n\n              if (sortType === 'Sort by Release Date') {\n                y.sort((a, b) => new Date(b.album.release_date).getTime() - new Date(a.album.release_date).getTime());\n              } else if (sortType === 'Sort Alphabetically') {\n                y.sort((a, b) => a.name.localeCompare(b.name));\n              } else if (sortType === 'Sort by Popularity') {\n                y.sort((a, b) => b.popularity - a.popularity);\n              } else if (sortType === 'Sort by Song Length(Short to Long)') {\n                y.sort((a, b) => a.duration_ms - b.duration_ms);\n              }\n\n              cards = y.map(val => val.preview_url ? /*#__PURE__*/React.createElement(TrackCard, {\n                key: val.id,\n                data: val,\n                img: val.album,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 53\n                }\n              }) : null);\n              ReactDOM.render(cards, document.getElementById('container'));\n              break;\n          }\n        });\n      }\n    };\n\n    this.state = {\n      tracks: [],\n      search: '',\n      artist: null,\n      searchType: 'track',\n      sortType: 'Sort Alphabetically',\n      cardlings: null\n    };\n    this.callAPI();\n  }\n\n  sortCards(value, items) {\n    if (value === 'Sort by Release Date') {\n      items.sort((a, b) => a.album.release_date - b.album.release_date);\n    } else if (value === 'Sort Alphabetically') {\n      items.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (value === 'Sort by Popularity') {\n      items.sort((a, b) => a.popularity - b.popularity);\n    } else if (value === 'Sort by Song Length(Short to Long)') items.sort((a, b) => a.duration_ms - b.duration_ms);\n  }\n\n  render() {\n    const options = lookup[this.state.searchType];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => {\n        this.setState({\n          search: event.target.value\n        });\n      },\n      value: this.state.search,\n      type: \"text\",\n      placeholder: \"Search...\",\n      name: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 62\n      }\n    }), \"Search\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, \"Choose a Genre:\"), /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.state.searchType,\n      onChange: this.changeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"album\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \"Album\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, \"Artist\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, \"Track\")), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"tracks\",\n      defaultValue: this.state.sortType,\n      onChange: this.changeSortType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, options.map(o => /*#__PURE__*/React.createElement(\"option\", {\n      key: o.id,\n      value: o.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, o.text))), /*#__PURE__*/React.createElement(TracksContainer, {\n      tracks: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;\nexport { apiTok };","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/Spotify/SampleSpotify/client/src/App.js"],"names":["React","Component","TracksContainer","ReactDOM","TrackCard","AlbumCard","ArtistCard","apiTok","lookup","id","text","App","callAPI","fetch","then","res","state","svrResponse","constructor","props","changeType","target","value","setState","searchType","sortType","changeSortType","e","handleClick","event","preventDefault","baseUrl","auth_token","fetchUrl","cards","searching","search","method","headers","resp","json","data","j","albums","items","sort","a","b","Date","release_date","getTime","name","localeCompare","total_tracks","duration_ms","map","val","render","document","getElementById","i","artists","followers","total","popularity","y","tracks","album","preview_url","artist","cardlings","sortCards","options","o"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TracksContainer from './components/TracksContainer'\nimport ReactDOM from 'react-dom'\nimport TrackCard from './components/TrackCard'\nimport AlbumCard from './components/AlbumCard'\nimport ArtistCard from './components/ArtistCard'\n\nvar apiTok;\nconst lookup = {\n      \"album\": [\n      { id: '1', text: 'Sort Alphabetically' },\n      { id: '2', text: 'Sort by Release Date' },\n      { id: '3', text: 'Sort by Tracks' }],\n      \"track\": [\n      { id: '1', text: 'Sort Alphabetically' },\n      { id: '2', text: 'Sort by Popularity'},\n      { id: '3', text: 'Sort by Release Date' },\n      { id: '4', text: 'Sort by Song Length(Short to Long)'}],\n      \"artist\": [\n      {id: '1', text: 'Sort Alphabetically'},\n      {id: '2', text: 'Sort by Popularity'},\n      {id: '3', text: 'Sort by Followers'}]\n}\n\nclass App extends Component {\n  callAPI() {\n    fetch(\"http://localhost:9000/getToken\")\n      .then(res => res.text())\n      .then(res => {this.state.svrResponse = res});\n    apiTok = this.state.svrResponse;\n  }\n  constructor(props){\n    super(props)\n    this.state = {\n    tracks: [],\n    search: '',\n    artist: null,\n    searchType: 'track',\n    sortType: 'Sort Alphabetically',\n    cardlings: null\n    };\n    this.callAPI();\n  }\n\n\n  changeType= ({ target: { value } }) => {\n    this.setState({ searchType: value });\n    this.setState({ sortType: 'Sort Alphabetically'})\n  }\n\n  changeSortType = (e) => {\n    this.setState({sortType: e.target.value})\n  };\n\n  sortCards(value, items){\n    if(value === 'Sort by Release Date'){\n      items.sort((a,b) => a.album.release_date - b.album.release_date);\n    }\n    else if(value === 'Sort Alphabetically'){\n      items.sort((a,b) => a.name.localeCompare(b.name))\n    }\n    else if(value === 'Sort by Popularity'){\n      items.sort((a,b) => a.popularity - b.popularity);\n    }\n    else if(value === 'Sort by Song Length(Short to Long)')\n      items.sort((a,b) => a.duration_ms - b.duration_ms);\n  };\n\n\n\n  handleClick = (event) => {\n    event.preventDefault()\n    this.callAPI()\n    const baseUrl = 'https://api.spotify.com/v1/search?'\n    const auth_token = 'Bearer ' + this.state.svrResponse\n    let fetchUrl,cards;\n    let sortType = this.state.sortType\n    let searching = this.state.searchType;\n    if(this.state.search){\n    fetchUrl= baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType + '&offset=0&limit=24'\n    fetch(fetchUrl, {\n      method: \"GET\",\n      headers: {\n      'Content-type': 'application/json',\n      'Authorization': auth_token\n      },\n    })\n    .then(resp => resp.json())\n    .then( function(data){\n      switch(searching){\n        case 'album':\n          const j = data.albums.items\n          if(sortType === 'Sort by Release Date'){\n            j.sort((a,b) => new Date(b.release_date).getTime() - new Date(a.release_date).getTime());\n          }\n          else if(sortType === 'Sort Alphabetically'){\n            j.sort((a,b) => a.name.localeCompare(b.name))\n          }\n          else if(sortType === 'Sort by Tracks'){\n            j.sort((a,b) => b.total_tracks - a.total_tracks);\n          }\n          else if(sortType === 'Sort by Song Length(Short to Long)'){\n            j.sort((a,b) => a.duration_ms - b.duration_ms);\n          }\n          cards = data.albums.items.map((val) => <AlbumCard  key={val.id}  data={val} img={val} />);\n          ReactDOM.render(cards,document.getElementById('container'))\n          break;\n        case 'artist':\n          const i = data.artists.items\n          if(sortType === 'Sort by Followers'){\n            i.sort((a,b) =>b.followers.total - a.followers.total);\n          }\n          else if(sortType === 'Sort Alphabetically'){\n            i.sort((a,b) => a.name.localeCompare(b.name))\n          }\n          else if(sortType === 'Sort by Popularity'){\n            i.sort((a,b) => b.popularity - a.popularity);\n          }\n          cards = data.artists.items.map((val) => <ArtistCard  key={val.id}  data={val} img={val} />);\n          ReactDOM.render(cards,document.getElementById('container'))\n          break;\n        case 'track' :\n          let y = data.tracks.items\n          if(sortType === 'Sort by Release Date'){\n            y.sort((a,b) => new Date(b.album.release_date).getTime() - new Date(a.album.release_date).getTime());\n          }\n          else if(sortType === 'Sort Alphabetically'){\n            y.sort((a,b) => a.name.localeCompare(b.name))\n          }\n          else if(sortType === 'Sort by Popularity'){\n            y.sort((a,b) => b.popularity - a.popularity);\n          }\n          else if(sortType === 'Sort by Song Length(Short to Long)'){\n            y.sort((a,b) => a.duration_ms - b.duration_ms);\n          }\n          cards = y.map((val) => val.preview_url ? (<TrackCard key={val.id} data={val} img={val.album}/>) : null);\n          ReactDOM.render(cards,document.getElementById('container'))\n          break;\n      \n      }\n    })\n    }\n  }\n\n\n  render() {\n    const options = lookup[this.state.searchType];\n    return (\n      <div className=\"App\">\n        <form>\n          <input onChange={event => {this.setState({search: event.target.value})}} value={this.state.search} type=\"text\" placeholder=\"Search...\" name=\"search\"/>\n          <button type=\"submit\" onClick={this.handleClick} > <i className=\"fa fa-search\"></i>Search</button>\n        </form>\n        <label>Choose a Genre:</label>\n\n        <select defaultValue={this.state.searchType} onChange={this.changeType}>\n          <option value=\"album\">Album</option>\n          <option value=\"artist\">Artist</option>\n          <option value=\"track\">Track</option>\n        </select>\n        <select id='tracks' defaultValue={this.state.sortType} onChange={this.changeSortType} >\n          {options.map(o => <option key={o.id} value={o.text}>{o.text}</option>)}\n        </select>\n        <TracksContainer tracks={this.state}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\nexport {apiTok};\n"]},"metadata":{},"sourceType":"module"}