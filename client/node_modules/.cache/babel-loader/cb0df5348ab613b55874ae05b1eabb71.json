{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\spotifyTest\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // import TracksContainer from './components/TracksContainer'\n\nclass App extends Component {\n  callAPI() {\n    fetch(\"http://localhost:9000/getToken\").then(res => res.text()).then(res => this.setState({\n      svrResponse: res\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.changeType = e => {\n      this.setState({\n        searchType: e.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      this.callAPI();\n      console.log(this.state.svrResponse);\n      const baseUrl = 'https://api.spotify.com/v1/search?';\n      let fetchUrl = baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType;\n      const auth_token = 'Bearer ' + this.state.svrResponse;\n      fetch(fetchUrl, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': auth_token\n        }\n      }).then(resp => resp.json()).then(data => console.log(data));\n    };\n\n    this.state = {\n      svrResponse: \"\",\n      tracks: [],\n      search: '',\n      artist: null,\n      searchType: 'album'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, this.state.svrResponse), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => {\n        this.setState({\n          search: event.target.value\n        });\n      },\n      value: this.state.search,\n      type: \"text\",\n      placeholder: \"Search...\",\n      name: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 62\n      }\n    }), \"Search\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Choose a Genre:\"), /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.state.searchType,\n      onChange: this.changeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"album\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Album\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Artist\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Track\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"album,artist,track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"All\")));\n  }\n\n}\n\nexport default App; // getHashParams = () => {\n//   var hashParams = {};\n//   var e, r = /([^&;=]+)=?([^&;]*)/g,\n//       q = window.location.hash.substring(1);\n//   while ( e = r.exec(q)) {\n//      hashParams[e[1]] = decodeURIComponent(e[2]);\n//   }\n//   console.log(hashParams);\n//   return hashParams;\n// }","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/spotifyTest/client/src/App.js"],"names":["React","Component","App","callAPI","fetch","then","res","text","setState","svrResponse","constructor","props","changeType","e","searchType","target","value","handleClick","event","preventDefault","console","log","state","baseUrl","fetchUrl","search","auth_token","method","headers","resp","json","data","tracks","artist","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// import TracksContainer from './components/TracksContainer'\n\n\n\nclass App extends Component {\n\n  callAPI() {\n    fetch(\"http://localhost:9000/getToken\")\n        .then(res => res.text())\n        .then(res => this.setState({ svrResponse: res }));\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { svrResponse: \"\",\n    tracks: [],\n    search: '',\n    artist: null,\n    searchType: 'album',};\n  }\n\n\n\n  changeType = (e) => {\n    this.setState({searchType:e.target.value})\n  };\n\n  handleClick = (event) => {\n    event.preventDefault()\n    this.callAPI()\n    console.log(this.state.svrResponse);\n    const baseUrl = 'https://api.spotify.com/v1/search?'\n    let fetchUrl = baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType\n    const auth_token = 'Bearer ' + this.state.svrResponse\n\n    fetch(fetchUrl, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': auth_token\n      },\n    })\n    .then(resp => resp.json())\n    .then(data => console.log(data))\n    }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App-intro\">{this.state.svrResponse}</p>\n        <form>\n          <input onChange={event => {this.setState({search: event.target.value})}} value={this.state.search} type=\"text\" placeholder=\"Search...\" name=\"search\"/>\n          <button type=\"submit\" onClick={this.handleClick} > <i className=\"fa fa-search\"></i>Search</button>\n          </form>\n          <label>Choose a Genre:</label>\n\n          <select defaultValue={this.state.searchType} onChange={this.changeType}>\n            <option value=\"album\">Album</option>\n            <option value=\"artist\">Artist</option>\n            <option value=\"track\">Track</option>\n            <option value=\"album,artist,track\">All</option>\n          </select>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// getHashParams = () => {\n//   var hashParams = {};\n//   var e, r = /([^&;=]+)=?([^&;]*)/g,\n//       q = window.location.hash.substring(1);\n//   while ( e = r.exec(q)) {\n//      hashParams[e[1]] = decodeURIComponent(e[2]);\n//   }\n//   console.log(hashParams);\n//   return hashParams;\n// }\n"]},"metadata":{},"sourceType":"module"}