{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\Spotify\\\\SampleSpotify\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TracksContainer from './components/TracksContainer';\nimport ReactDOM from 'react-dom';\nimport TrackCard from './components/TrackCard';\nimport AlbumCard from './components/AlbumCard';\nimport ArtistCard from './components/ArtistCard';\nvar apiTok;\nconst lookup = {\n  \"album\": [{\n    id: '1',\n    text: 'Sort Alphabetically'\n  }, {\n    id: '2',\n    text: 'Sort by Release Date'\n  }, {\n    id: '3',\n    text: 'Sort by Tracks'\n  }],\n  \"track\": [{\n    id: '1',\n    text: 'Sort Alphabetically'\n  }, {\n    id: '2',\n    text: 'Sort by Popularity'\n  }, {\n    id: '3',\n    text: 'Sort by Release Date'\n  }, {\n    id: '4',\n    text: 'Sort by Song Length(Short to Long)'\n  }],\n  \"artist\": [{\n    id: '1',\n    text: 'Sort Alphabetically'\n  }, {\n    id: '2',\n    text: 'Sort by Popularity'\n  }, {\n    id: '3',\n    text: 'Sort by Followers'\n  }]\n};\n\nclass App extends Component {\n  callAPI() {\n    fetch(\"http://localhost:9000/getToken\").then(res => res.text()).then(res => {\n      this.state.svrResponse = res;\n    });\n    apiTok = this.state.svrResponse;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.changeType = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        searchType: value\n      });\n      this.setState({\n        sortType: 'Sort Alphabetically'\n      });\n    };\n\n    this.changeSortType = e => {\n      this.setState({\n        sortType: e.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      this.callAPI();\n      console.log(this.state.svrResponse);\n      const baseUrl = 'https://api.spotify.com/v1/search?';\n      const auth_token = 'Bearer ' + this.state.svrResponse;\n      let fetchUrl;\n      let cards;\n      let sortType = this.state.sortType;\n      let searching = this.state.searchType;\n\n      if (this.state.search) {\n        fetchUrl = baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType + '&offset=0&limit=24';\n        fetch(fetchUrl, {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': auth_token\n          }\n        }).then(resp => resp.json()).then(function (data) {\n          console.log(data);\n          console.log(sortType);\n\n          switch (searching) {\n            case 'album':\n              const j = data.albums.items;\n\n              if (sortType === 'Sort by Release Date') {\n                j.sort((a, b) => new Date(b.release_date).getTime() - new Date(a.release_date).getTime());\n              } else if (sortType === 'Sort Alphabetically') {\n                j.sort((a, b) => a.name.localeCompare(b.name));\n              } else if (sortType === 'Sort by Tracks') {\n                j.sort((a, b) => b.total_tracks - a.total_tracks);\n              } else if (sortType === 'Sort by Song Length(Short to Long)') j.sort((a, b) => a.duration_ms - b.duration_ms);\n\n              cards = data.albums.items.map(val => /*#__PURE__*/React.createElement(AlbumCard, {\n                key: val.id,\n                data: val,\n                img: val,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 42\n                }\n              }));\n              ReactDOM.render(cards, document.getElementById('container'));\n              break;\n\n            case 'artist':\n              const i = data.artists.items;\n              console.log(sortType);\n\n              if (sortType === 'Sort by Followers') {\n                i.sort((a, b) => b.followers.total - a.followers.total);\n              } else if (sortType === 'Sort Alphabetically') {\n                i.sort((a, b) => a.name.localeCompare(b.name));\n              } else if (sortType === 'Sort by Popularity') {\n                i.sort((a, b) => b.popularity - a.popularity);\n              }\n\n              cards = data.artists.items.map(val => /*#__PURE__*/React.createElement(ArtistCard, {\n                key: val.id,\n                data: val,\n                img: val,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 43\n                }\n              }));\n              ReactDOM.render(cards, document.getElementById('container'));\n              break;\n\n            case 'track':\n              let y = data.tracks.items; // let x = this.sortCards()\n\n              if (sortType === 'Sort by Release Date') {\n                y.sort((a, b) => new Date(b.album.release_date).getTime() - new Date(a.album.release_date).getTime());\n              } else if (sortType === 'Sort Alphabetically') {\n                y.sort((a, b) => a.name.localeCompare(b.name));\n              } else if (sortType === 'Sort by Popularity') {\n                y.sort((a, b) => b.popularity - a.popularity);\n              } else if (sortType === 'Sort by Song Length(Short to Long)') y.sort((a, b) => a.duration_ms - b.duration_ms);\n\n              cards = y.map(val => val.preview_url ? /*#__PURE__*/React.createElement(TrackCard, {\n                key: val.id,\n                data: val,\n                img: val.album,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 45\n                }\n              }) : null);\n              ReactDOM.render(cards, document.getElementById('container'));\n              break;\n\n            case \"album,artist,track\":\n              break;\n          }\n        });\n      }\n    };\n\n    this.state = {\n      tracks: [],\n      search: '',\n      artist: null,\n      searchType: 'track',\n      sortType: 'Sort Alphabetically',\n      cardlings: null\n    };\n    this.callAPI();\n  }\n\n  sortCards(value, items) {\n    console.log('items', items);\n    console.log('value', value);\n\n    if (value === 'Sort by Release Date') {\n      items.sort((a, b) => a.album.release_date - b.album.release_date);\n    } else if (value === 'Sort Alphabetically') {\n      items.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (value === 'Sort by Popularity') {\n      items.sort((a, b) => a.popularity - b.popularity);\n    } else if (value === 'Sort by Song Length(Short to Long)') items.sort((a, b) => a.duration_ms - b.duration_ms);\n  }\n\n  render() {\n    const options = lookup[this.state.searchType];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => {\n        this.setState({\n          search: event.target.value\n        });\n      },\n      value: this.state.search,\n      type: \"text\",\n      placeholder: \"Search...\",\n      name: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 3\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 54\n      }\n    }), \"Search\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 3\n      }\n    }, \"Choose a Genre:\"), /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.state.searchType,\n      onChange: this.changeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"album\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 3\n      }\n    }, \"Album\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 3\n      }\n    }, \"Artist\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 3\n      }\n    }, \"Track\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"album,artist,track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 3\n      }\n    }, \"All\")), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"tracks\",\n      defaultValue: this.state.sortType,\n      onChange: this.changeSortType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 3\n      }\n    }, options.map(o => /*#__PURE__*/React.createElement(\"option\", {\n      key: o.id,\n      value: o.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, o.text))), /*#__PURE__*/React.createElement(TracksContainer, {\n      tracks: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 3\n      }\n    }));\n  }\n\n}\n\nexport default App;\nexport { apiTok };","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/Spotify/SampleSpotify/client/src/App.js"],"names":["React","Component","TracksContainer","ReactDOM","TrackCard","AlbumCard","ArtistCard","apiTok","lookup","id","text","App","callAPI","fetch","then","res","state","svrResponse","constructor","props","changeType","target","value","setState","searchType","sortType","changeSortType","e","handleClick","event","preventDefault","console","log","baseUrl","auth_token","fetchUrl","cards","searching","search","method","headers","resp","json","data","j","albums","items","sort","a","b","Date","release_date","getTime","name","localeCompare","total_tracks","duration_ms","map","val","render","document","getElementById","i","artists","followers","total","popularity","y","tracks","album","preview_url","artist","cardlings","sortCards","options","o"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TracksContainer from './components/TracksContainer'\nimport ReactDOM from 'react-dom'\nimport TrackCard from './components/TrackCard'\nimport AlbumCard from './components/AlbumCard'\nimport ArtistCard from './components/ArtistCard'\n\nvar apiTok;\nconst lookup = {\n      \"album\": [\n      { id: '1', text: 'Sort Alphabetically' },\n      { id: '2', text: 'Sort by Release Date' },\n      { id: '3', text: 'Sort by Tracks' }],\n      \"track\": [\n      { id: '1', text: 'Sort Alphabetically' },\n      { id: '2', text: 'Sort by Popularity'},\n      { id: '3', text: 'Sort by Release Date' },\n      { id: '4', text: 'Sort by Song Length(Short to Long)'}],\n      \"artist\": [\n      {id: '1', text: 'Sort Alphabetically'},\n      {id: '2', text: 'Sort by Popularity'},\n      {id: '3', text: 'Sort by Followers'}]\n}\n\nclass App extends Component {\n  callAPI() {\n    fetch(\"http://localhost:9000/getToken\")\n      .then(res => res.text())\n      .then(res => {this.state.svrResponse = res});\n    apiTok = this.state.svrResponse;\n  }\n  constructor(props){\n  super(props)\n  this.state = {\n  tracks: [],\n  search: '',\n  artist: null,\n  searchType: 'track',\n  sortType: 'Sort Alphabetically',\n  cardlings: null\n  };\n  this.callAPI();\n  }\n\n\n  changeType= ({ target: { value } }) => {\n  this.setState({ searchType: value });\n  this.setState({ sortType: 'Sort Alphabetically'})\n  }\n\n  changeSortType = (e) => {\n  this.setState({sortType: e.target.value})\n  };\n\n  sortCards(value, items){\n  console.log('items', items)\n  console.log('value', value)\n  if(value === 'Sort by Release Date'){\n  items.sort((a,b) => a.album.release_date - b.album.release_date);\n  }\n  else if(value === 'Sort Alphabetically'){\n\n  items.sort((a,b) => a.name.localeCompare(b.name))\n  }\n  else if(value === 'Sort by Popularity'){\n  items.sort((a,b) => a.popularity - b.popularity);\n  }\n  else if(value === 'Sort by Song Length(Short to Long)')\n  items.sort((a,b) => a.duration_ms - b.duration_ms);\n  };\n\n\n\n  handleClick = (event) => {\n  event.preventDefault()\n  this.callAPI()\n  console.log(this.state.svrResponse);\n  const baseUrl = 'https://api.spotify.com/v1/search?'\n  const auth_token = 'Bearer ' + this.state.svrResponse\n  let fetchUrl;\n  let cards;\n  let sortType = this.state.sortType\n  let searching = this.state.searchType;\n  if(this.state.search){\n  fetchUrl= baseUrl + \"query=\" + this.state.search + '&type=' + this.state.searchType + '&offset=0&limit=24'\n  fetch(fetchUrl, {\n  method: \"GET\",\n  headers: {\n  'Content-type': 'application/json',\n  'Authorization': auth_token\n  },\n  })\n  .then(resp => resp.json())\n  .then( function(data){\n  console.log(data);\n  console.log(sortType)\n  switch(searching){\n  case 'album':\n  const j = data.albums.items\n  if(sortType === 'Sort by Release Date'){\n\n  j.sort((a,b) => new Date(b.release_date).getTime() - new Date(a.release_date).getTime());\n  }\n  else if(sortType === 'Sort Alphabetically'){\n\n  j.sort((a,b) => a.name.localeCompare(b.name))\n  }\n  else if(sortType === 'Sort by Tracks'){\n  j.sort((a,b) => b.total_tracks - a.total_tracks);\n  }\n  else if(sortType === 'Sort by Song Length(Short to Long)')\n  j.sort((a,b) => a.duration_ms - b.duration_ms);\n  cards = data.albums.items.map((val) => <AlbumCard  key={val.id}  data={val} img={val} />);\n  ReactDOM.render(cards,\n  document.getElementById('container')\n  )\n  break;\n  case 'artist':\n  const i = data.artists.items\n  console.log(sortType)\n  if(sortType === 'Sort by Followers'){\n  i.sort((a,b) =>b.followers.total - a.followers.total);\n  }\n  else if(sortType === 'Sort Alphabetically'){\n\n  i.sort((a,b) => a.name.localeCompare(b.name))\n  }\n  else if(sortType === 'Sort by Popularity'){\n  i.sort((a,b) => b.popularity - a.popularity);\n  }\n  cards = data.artists.items.map((val) => <ArtistCard  key={val.id}  data={val} img={val} />);\n  ReactDOM.render(cards,\n  document.getElementById('container')\n  )\n  break;\n  case 'track' :\n  let y = data.tracks.items\n  // let x = this.sortCards()\n  if(sortType === 'Sort by Release Date'){\n  y.sort((a,b) => new Date(b.album.release_date).getTime() - new Date(a.album.release_date).getTime());\n  }\n  else if(sortType === 'Sort Alphabetically'){\n\n  y.sort((a,b) => a.name.localeCompare(b.name))\n  }\n  else if(sortType === 'Sort by Popularity'){\n  y.sort((a,b) => b.popularity - a.popularity);\n  }\n  else if(sortType === 'Sort by Song Length(Short to Long)')\n  y.sort((a,b) => a.duration_ms - b.duration_ms);\n\n  cards = y.map((val) => val.preview_url ? (<TrackCard key={val.id} data={val} img={val.album}/>) : null);\n\n  ReactDOM.render(cards,\n  document.getElementById('container')\n  )\n  break;\n  case \"album,artist,track\":\n  break;\n  }\n  })\n  }\n  }\n\n\n  render() {\n  const options = lookup[this.state.searchType];\n  return (\n  <div className=\"App\">\n  <form>\n  <input onChange={event => {this.setState({search: event.target.value})}} value={this.state.search} type=\"text\" placeholder=\"Search...\" name=\"search\"/>\n  <button type=\"submit\" onClick={this.handleClick} > <i className=\"fa fa-search\"></i>Search</button>\n  </form>\n  <label>Choose a Genre:</label>\n\n  <select defaultValue={this.state.searchType} onChange={this.changeType}>\n  <option value=\"album\">Album</option>\n  <option value=\"artist\">Artist</option>\n  <option value=\"track\">Track</option>\n  <option value=\"album,artist,track\">All</option>\n  </select>\n  <select id='tracks' defaultValue={this.state.sortType} onChange={this.changeSortType} >\n  {options.map(o => <option key={o.id} value={o.text}>{o.text}</option>)}\n  </select>\n  <TracksContainer tracks={this.state}/>\n  {/* {this.state.tracks.map(track => <TracksContainer  key={track.id}/>)} */}\n  </div>\n  );\n  }\n}\n\nexport default App;\nexport {apiTok};\n"]},"metadata":{},"sourceType":"module"}