{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\Desktop\\\\Spotify\\\\SampleSpotify\\\\client\\\\src\\\\components\\\\AlbumCard.js\";\nimport React, { Component } from 'react';\nimport AlbumTrackCard from './AlbumTrackCard';\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport { apiTok } from './../App.js';\nimport ReactDOM from 'react-dom';\nimport TrackList from './TrackList';\nimport \"../css/albumcard.css\";\nlet albumImg;\nlet tracklisted;\n\nclass AlbumCard extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => {\n      console.log(apiTok);\n      this.setState({\n        isPaneOpenLeft: true\n      }); // console.log('ALBUM TRACKS')\n\n      const id = this.props.data.id;\n      const baseUrl = 'https://api.spotify.com/v1/albums/';\n      const auth_token = 'Bearer ' + apiTok;\n      let fetchUrl = baseUrl + id + '/tracks?limit=24'; // let albumTracks;\n\n      fetch(fetchUrl, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': auth_token\n        }\n      }).then(resp => resp.json()).then(function (data) {\n        console.log('asdsadsa', data);\n        tracklisted = data.items.map(val => /*#__PURE__*/React.createElement(TrackList, {\n          key: val.id,\n          data: val,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        }));\n      });\n    };\n\n    this.state = {\n      isPaneOpen: false,\n      isPaneOpenLeft: false,\n      albumTracks: null\n    };\n  }\n\n  componentDidMount() {\n    {\n      tracklisted ? setAlTrack() : null;\n    }\n  }\n\n  setAlTrack() {\n    this.setState({\n      albumTracks: tracklisted\n    });\n  }\n\n  render() {\n    albumImg = this.props.data.images[1].url;\n    console.log(this.state.isPaneOpenLeft);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"track-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.handleClick,\n      src: this.props.data.images[1].url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \" \", this.props.data.name)), /*#__PURE__*/React.createElement(SlidingPane, {\n      isOpen: this.state.isPaneOpenLeft,\n      from: \"left\",\n      width: \"400px\",\n      onRequestClose: () => this.setState({\n        isPaneOpenLeft: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"album-tracks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, tracklisted)));\n  }\n\n}\n\nexport default AlbumCard;\nexport { albumImg };","map":{"version":3,"sources":["C:/Users/Alvin/Desktop/Spotify/SampleSpotify/client/src/components/AlbumCard.js"],"names":["React","Component","AlbumTrackCard","SlidingPane","apiTok","ReactDOM","TrackList","albumImg","tracklisted","AlbumCard","constructor","handleClick","console","log","setState","isPaneOpenLeft","id","props","data","baseUrl","auth_token","fetchUrl","fetch","method","headers","then","resp","json","items","map","val","state","isPaneOpen","albumTracks","componentDidMount","setAlTrack","render","images","url","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AlbumTrackCard from './AlbumTrackCard'\r\nimport SlidingPane from \"react-sliding-pane\";\r\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\r\nimport {apiTok} from './../App.js'\r\nimport ReactDOM from 'react-dom'\r\nimport TrackList from './TrackList'\r\nimport \"../css/albumcard.css\";\r\n\r\nlet albumImg;\r\nlet tracklisted;\r\nclass AlbumCard extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            isPaneOpen: false,\r\n            isPaneOpenLeft: false,\r\n            albumTracks: null,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n      {tracklisted ? setAlTrack() : null}\r\n    }\r\n    setAlTrack(){\r\n      this.setState({albumTracks: tracklisted})\r\n    }\r\n    handleClick = () => {\r\n        console.log(apiTok);\r\n        this.setState({ isPaneOpenLeft: true })\r\n        // console.log('ALBUM TRACKS')\r\n        const id = this.props.data.id\r\n        const baseUrl = 'https://api.spotify.com/v1/albums/'\r\n        const auth_token = 'Bearer ' + apiTok\r\n        let fetchUrl = baseUrl + id + '/tracks?limit=24'\r\n        // let albumTracks;\r\n        fetch(fetchUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': auth_token\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(function(data){\r\n          console.log('asdsadsa',data);\r\n\r\n          tracklisted = data.items.map((val) =>\r\n              <TrackList  key={val.id}  data={val}/>)\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n      albumImg = this.props.data.images[1].url;\r\n        console.log(this.state.isPaneOpenLeft)\r\n        return(\r\n        <div>\r\n            <div className=\"track-card\" >\r\n            <img onClick={this.handleClick} src={this.props.data.images[1].url} alt=''  />\r\n            <p> {this.props.data.name}</p>\r\n            </div>\r\n            <SlidingPane\r\n              isOpen={this.state.isPaneOpenLeft}\r\n              from=\"left\"\r\n              width=\"400px\"\r\n              onRequestClose={() => this.setState({ isPaneOpenLeft: false })}\r\n            >\r\n              <div id=\"album-tracks\">{tracklisted}</div>\r\n            </SlidingPane>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlbumCard;\r\nexport {albumImg};\r\n"]},"metadata":{},"sourceType":"module"}